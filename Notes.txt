1. the new sending and recving mechanism works as follows:

server_v3 has 3 sockets:
socket_listen to send the data to all the client terminal units
socket_listen2 to send the data to all the client terminal units
recver is to recv data from the client terminal units

sending data has two threads as follows:
1. to send the data to the client terminal units.
2. to send the data to the client display unit.
3. to recv the data we are using the same thread as that of game loop

this way we are ensuring that data reaches to all the clients at the appropriate time...
-----------------------------------------------------------------------------------------------------------------
the new alogirthm used to remove the packet loss:
persistence of information:
how i designed the entire network protocol for the game:
1. threading for recving and sending the data
2. fragmenting packets to suit the size of MTU
3. persistence of information so that no important information is missed.

persistence of information increases the size of the packet that is being transmitted but makes sure that no packet carrying important information
is lost; uses a simple mechanism of ack, send for some time so that the client can delete it over the time
-----------------------------------------------------------------------------------------------
for making the game support for multiple languages: we need to follow the following architecture:

